{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Orange\\\\Desktop\\\\CourseWave\\\\client\\\\src\\\\Components\\\\UserInfoCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchTeachers, fetchStudents } from \"../Redux/UsersSlice\";\nimport Cookies from \"js-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserInfoCard = () => {\n  _s();\n  const dispatch = useDispatch();\n  const user = useSelector(state => state.user);\n  const [currentUser, setCurruntUsers] = useState(null);\n  useEffect(() => {\n    if (!user) return;\n    let token = Cookies.get(\"userInfo\");\n    token = JSON.parse(token);\n    if (token.trainer) {\n      setCurruntUsers(user.teachers.trainers.find(c => c.trainer_id === parseInt(token.trainer.trainer_id)));\n    } else {\n      setCurruntUsers(user.students.users.find(c => c.user_id === parseInt(token.student.user_id)));\n    }\n  }, [user]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Assuming you have a fetchUser action\n        await dispatch(fetchTeachers());\n      } catch (error) {\n        console.log(\"Error fetching user data\", error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        // Assuming you have a fetchUser action\n        await dispatch(fetchStudents());\n      } catch (error) {\n        console.log(\"Error fetching user data\", error.message);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Assuming you have a user slice in your Redux store\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: currentUser && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-bold mb-2\",\n        children: \"User Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [\"Name: \", currentUser.firstname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [\"Email: \", currentUser.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(UserInfoCard, \"qYYTBU4aZi80M/imhT6l2iBuemA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserInfoCard;\nexport default UserInfoCard;\nvar _c;\n$RefreshReg$(_c, \"UserInfoCard\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchTeachers","fetchStudents","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","UserInfoCard","_s","dispatch","user","state","currentUser","setCurruntUsers","token","get","JSON","parse","trainer","teachers","trainers","find","c","trainer_id","parseInt","students","users","user_id","student","fetchData","error","console","log","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","firstname","email","_c","$RefreshReg$"],"sources":["C:/Users/Orange/Desktop/CourseWave/client/src/Components/UserInfoCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchTeachers, fetchStudents } from \"../Redux/UsersSlice\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst UserInfoCard = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user);\r\n  const [currentUser, setCurruntUsers] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    let token = Cookies.get(\"userInfo\");\r\n    token = JSON.parse(token);\r\n    if (token.trainer) {\r\n      setCurruntUsers(\r\n        user.teachers.trainers.find(\r\n          (c) => c.trainer_id === parseInt(token.trainer.trainer_id)\r\n        )\r\n      );\r\n    } else {\r\n      setCurruntUsers(\r\n        user.students.users.find(\r\n          (c) => c.user_id === parseInt(token.student.user_id)\r\n        )\r\n      );\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Assuming you have a fetchUser action\r\n        await dispatch(fetchTeachers());\r\n      } catch (error) {\r\n        console.log(\"Error fetching user data\", error.message);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        // Assuming you have a fetchUser action\r\n        await dispatch(fetchStudents());\r\n      } catch (error) {\r\n        console.log(\"Error fetching user data\", error.message);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Assuming you have a user slice in your Redux store\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      {currentUser && (\r\n        <>\r\n          <h2 className=\"text-xl font-bold mb-2\">User Info</h2>\r\n          <p className=\"text-gray-700\">Name: {currentUser.firstname}</p>\r\n          <p className=\"text-gray-700\">Email: {currentUser.email}</p>\r\n          {/* Additional user information can be displayed here */}\r\n          {/* Add a photo of the user */}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserInfoCard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}