{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport Cookies from \"js-cookie\";\nimport axios from \"axios\";\n\n// Define initial state\nconst initialState = {\n  students: [],\n  teachers: [],\n  status: \"idle\",\n  error: null,\n  user: null\n};\nconst token = Cookies.get(\"token\");\naxios.defaults.headers.common[\"Authorization\"] = token;\n// Define async thunk for fetching students\nexport const fetchStudents = createAsyncThunk(\"user/fetchStudents\", async () => {\n  const response = await axios.get(\" http://localhost:5000/getUsers\");\n  return response.data;\n});\n\n// Define async thunk for fetching teachers\nexport const fetchTeachers = createAsyncThunk(\"user/fetchTeachers\", async () => {\n  const response = await axios.get(\"http://localhost:5000/getTrainers\");\n  return response.data;\n});\nexport const signupUserAsync = createAsyncThunk(\"user/signupUser\", async userData => {\n  const response = await axios.post(\"http://localhost:5000/userSignup\", userData);\n  return response.data;\n});\n\n// Async thunk for trainer signup\nexport const signupTrainerAsync = createAsyncThunk(\"user/signupTrainer\", async trainerData => {\n  const response = await axios.post(\"http://localhost:5000/trainerSignup\", trainerData);\n  return response.data;\n});\nexport const loginUserAsync = createAsyncThunk(\"user/loginUser\", async loginData => {\n  return axios.post(\"http://localhost:5000/loginUser\", loginData).then(response => {\n    return response.data;\n  }).catch(e => {\n    return {\n      error: e.response.data.error\n    };\n  });\n});\n\n// Async thunk for trainer login\nexport const loginTrainerAsync = createAsyncThunk(\"user/loginTrainer\", async loginData => {\n  return axios.post(\"http://localhost:5000/loginTrainer\", loginData).then(response => {\n    return response.data;\n  }).catch(e => {\n    return {\n      error: e.response.data.error\n    };\n  });\n});\nexport const updateUserAsync = createAsyncThunk(\"user/updateUser\", async updateData => {\n  const response = await axios.put(\"/updateUser\", updateData);\n  return response.data;\n});\n\n// Async thunk for updating trainer information\nexport const updateTrainerAsync = createAsyncThunk(\"user/updateTrainer\", async updateData => {\n  const response = await axios.put(\"/updateTrainer\", updateData);\n  return response.data;\n});\nexport const deleteUserAsync = createAsyncThunk(\"user/deleteUser\", async deleteData => {\n  const response = await axios.put(\"/deleteUser\", deleteData);\n  return response.data;\n});\n\n// Async thunk for deleting trainer\nexport const deleteTrainerAsync = createAsyncThunk(\"user/deleteTrainer\", async deleteData => {\n  const response = await axios.put(\"/deleteTrainer\", deleteData);\n  return response.data;\n});\nexport const emptyStudent = createAsyncThunk(\"user/emptyStudent\", async () => {\n  return [];\n});\n\n// Create a slice of the Redux store\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loggedUserInfo: (state, action) => {\n      // Update user information in the state\n      state.user = action.payload;\n    },\n    // Example reducer for updating trainer information\n    updateTrainerInfo: (state, action) => {\n      // Update trainer information in the state\n      state.trainerInfo = action.payload;\n    },\n    setUserState: (state, action) => {\n      state.user = action.payload;\n      state.users = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Handle fetching students\n    .addCase(fetchStudents.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchStudents.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.students = action.payload;\n    }).addCase(fetchStudents.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    })\n    // Handle fetching teachers\n    .addCase(fetchTeachers.pending, state => {\n      state.status = \"loading\";\n    }).addCase(fetchTeachers.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.teachers = action.payload;\n    }).addCase(fetchTeachers.rejected, (state, action) => {\n      state.status = \"failed\";\n      state.error = action.error.message;\n    }).addCase(signupUserAsync.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.user = action.payload;\n    }).addCase(signupTrainerAsync.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.user = action.payload;\n    }).addCase(loginUserAsync.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.user = action.payload.user;\n    }).addCase(loginTrainerAsync.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.user = action.payload;\n    }).addCase(updateUserAsync.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.user = action.payload;\n    }).addCase(updateTrainerAsync.fulfilled, (state, action) => {\n      state.status = \"succeeded\";\n      state.user = action.payload;\n    }).addCase(deleteUserAsync.fulfilled, state => {\n      state.status = \"succeeded\";\n      state.user = null; // Reset user data after deletion\n    }).addCase(deleteTrainerAsync.fulfilled, state => {\n      state.status = \"succeeded\";\n      state.user = null; // Reset user data after deletion\n    }).addCase(emptyStudent.fulfilled, state => {\n      state.status = \"succeeded\";\n      state.user = null; // Reset user data after deletion\n    });\n  }\n});\n\n// Export actions and reducer\nexport const {\n  loggedUserInfo,\n  updateTrainerInfo,\n  setUserState\n} = userSlice.actions;\nexport const userReducer = userSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","Cookies","axios","initialState","students","teachers","status","error","user","token","get","defaults","headers","common","fetchStudents","response","data","fetchTeachers","signupUserAsync","userData","post","signupTrainerAsync","trainerData","loginUserAsync","loginData","then","catch","e","loginTrainerAsync","updateUserAsync","updateData","put","updateTrainerAsync","deleteUserAsync","deleteData","deleteTrainerAsync","emptyStudent","userSlice","name","reducers","loggedUserInfo","state","action","payload","updateTrainerInfo","trainerInfo","setUserState","users","extraReducers","builder","addCase","pending","fulfilled","rejected","message","actions","userReducer","reducer"],"sources":["C:/Users/Orange/Desktop/CourseWave/client/src/Redux/UsersSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport Cookies from \"js-cookie\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// Define initial state\r\nconst initialState = {\r\n  students: [],\r\n  teachers: [],\r\n  status: \"idle\",\r\n  error: null,\r\n  user: null,\r\n};\r\nconst token = Cookies.get(\"token\");\r\naxios.defaults.headers.common[\"Authorization\"] = token;\r\n// Define async thunk for fetching students\r\nexport const fetchStudents = createAsyncThunk(\r\n  \"user/fetchStudents\",\r\n  async () => {\r\n    const response = await axios.get(\" http://localhost:5000/getUsers\");\r\n    return response.data;\r\n  }\r\n);\r\n\r\n// Define async thunk for fetching teachers\r\nexport const fetchTeachers = createAsyncThunk(\r\n  \"user/fetchTeachers\",\r\n  async () => {\r\n    const response = await axios.get(\"http://localhost:5000/getTrainers\");\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const signupUserAsync = createAsyncThunk(\r\n  \"user/signupUser\",\r\n  async (userData) => {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/userSignup\",\r\n      userData\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\n// Async thunk for trainer signup\r\nexport const signupTrainerAsync = createAsyncThunk(\r\n  \"user/signupTrainer\",\r\n  async (trainerData) => {\r\n    const response = await axios.post(\r\n      \"http://localhost:5000/trainerSignup\",\r\n      trainerData\r\n    );\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const loginUserAsync = createAsyncThunk(\r\n  \"user/loginUser\",\r\n  async (loginData) => {\r\n    return axios\r\n      .post(\"http://localhost:5000/loginUser\", loginData)\r\n      .then((response) => {\r\n        return response.data;\r\n      })\r\n      .catch((e) => {\r\n        return { error: e.response.data.error };\r\n      });\r\n  }\r\n);\r\n\r\n// Async thunk for trainer login\r\nexport const loginTrainerAsync = createAsyncThunk(\r\n  \"user/loginTrainer\",\r\n  async (loginData) => {\r\n    return axios.post(\"http://localhost:5000/loginTrainer\", loginData)\r\n    .then((response)=>{\r\n      return response.data;\r\n    })\r\n    .catch((e)=>{\r\n      return { error: e.response.data.error };\r\n    })\r\n  }\r\n);\r\n\r\nexport const updateUserAsync = createAsyncThunk(\r\n  \"user/updateUser\",\r\n  async (updateData) => {\r\n    const response = await axios.put(\"/updateUser\", updateData);\r\n    return response.data;\r\n  }\r\n);\r\n\r\n// Async thunk for updating trainer information\r\nexport const updateTrainerAsync = createAsyncThunk(\r\n  \"user/updateTrainer\",\r\n  async (updateData) => {\r\n    const response = await axios.put(\"/updateTrainer\", updateData);\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const deleteUserAsync = createAsyncThunk(\r\n  \"user/deleteUser\",\r\n  async (deleteData) => {\r\n    const response = await axios.put(\"/deleteUser\", deleteData);\r\n    return response.data;\r\n  }\r\n);\r\n\r\n// Async thunk for deleting trainer\r\nexport const deleteTrainerAsync = createAsyncThunk(\r\n  \"user/deleteTrainer\",\r\n  async (deleteData) => {\r\n    const response = await axios.put(\"/deleteTrainer\", deleteData);\r\n    return response.data;\r\n  }\r\n);\r\nexport const emptyStudent = createAsyncThunk(\"user/emptyStudent\", async () => {\r\n  return [];\r\n});\r\n\r\n// Create a slice of the Redux store\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    loggedUserInfo: (state, action) => {\r\n      // Update user information in the state\r\n      state.user = action.payload;\r\n    },\r\n\r\n    // Example reducer for updating trainer information\r\n    updateTrainerInfo: (state, action) => {\r\n      // Update trainer information in the state\r\n      state.trainerInfo = action.payload;\r\n    },\r\n\r\n    setUserState: (state, action) => {\r\n      state.user = action.payload;\r\n      state.users = action.payload;\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // Handle fetching students\r\n      .addCase(fetchStudents.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchStudents.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.students = action.payload;\r\n      })\r\n      .addCase(fetchStudents.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message;\r\n      })\r\n      // Handle fetching teachers\r\n      .addCase(fetchTeachers.pending, (state) => {\r\n        state.status = \"loading\";\r\n      })\r\n      .addCase(fetchTeachers.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.teachers = action.payload;\r\n      })\r\n      .addCase(fetchTeachers.rejected, (state, action) => {\r\n        state.status = \"failed\";\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(signupUserAsync.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(signupTrainerAsync.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(loginUserAsync.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.user = action.payload.user;\r\n      })\r\n      .addCase(loginTrainerAsync.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(updateUserAsync.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(updateTrainerAsync.fulfilled, (state, action) => {\r\n        state.status = \"succeeded\";\r\n        state.user = action.payload;\r\n      })\r\n      .addCase(deleteUserAsync.fulfilled, (state) => {\r\n        state.status = \"succeeded\";\r\n        state.user = null; // Reset user data after deletion\r\n      })\r\n      .addCase(deleteTrainerAsync.fulfilled, (state) => {\r\n        state.status = \"succeeded\";\r\n        state.user = null; // Reset user data after deletion\r\n      })\r\n      .addCase(emptyStudent.fulfilled, (state) => {\r\n        state.status = \"succeeded\";\r\n        state.user = null; // Reset user data after deletion\r\n      });\r\n  },\r\n});\r\n\r\n// Export actions and reducer\r\nexport const { loggedUserInfo, updateTrainerInfo, setUserState } =\r\n  userSlice.actions;\r\nexport const userReducer = userSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}